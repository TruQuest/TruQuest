version: '2'

services:
  pg:
    image: bitnami/postgresql:15.5.0
    environment:
      POSTGRESQL_WAL_LEVEL: logical
      POSTGRESQL_DATABASE: TruQuest
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_SHARED_PRELOAD_LIBRARIES: pgaudit,pg_stat_statements
    ports:
      - '5433:5432'
    volumes:
      - pg_data:/bitnami/postgresql
    networks:
      - truquest

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - '9092'
      - '9094:9094'
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - truquest

  debezium:
    image: debezium/connect:2.4.1.Final
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: debez
      CONFIG_STORAGE_TOPIC: debez_connect_configs
      OFFSET_STORAGE_TOPIC: debez_connect_offsets
      STATUS_STORAGE_TOPIC: debez_connect_statuses
    ports:
      - '8083:8083'
    networks:
      - truquest
    depends_on:
      - pg
      - kafka

  ipfs:
    image: ipfs/kubo
    ports:
      - '4001:4001'
      - '4001:4001/udp'
      - '8080:8080'
      - '5001:5001'
    networks:
      - truquest
    volumes:
      - ./ipfs/data:/data/ipfs

  bundler:
    image: etherspot/skandha:1.0.22-alpha
    command: 'standalone --unsafeMode'
    volumes:
      - type: bind
        source: ./bundler-config-dev.json
        target: /usr/app/config.json
    ports:
      - 3000:14337
    networks:
      - truquest

  kafka-ui:
    image: provectuslabs/kafka-ui:53a6553765a806eda9905c43bfcfe09da6812035
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - '7777:8080'
    networks:
      - truquest
    depends_on:
      - kafka

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.80.0
    command: [ --config=/etc/otel-collector-config.yml ]
    volumes:
      - ./otel-collector-config-dev.yml:/etc/otel-collector-config.yml
    ports:
      - 4317:4317
    networks:
      - truquest
    depends_on:
      - uptrace

  file-archive:
    image: truquest_file_archive:latest
    build:
      context: src/Orchestrator/services/FileArchiveService
    environment:
      DOTNET_ENVIRONMENT: Development
      ASPNETCORE_ENVIRONMENT: Development
      WebPageScreenshots__ApiFlash__AccessKey: ${WebPageScreenshots__ApiFlash__AccessKey}
    volumes:
      - './src/Orchestrator/services/FileArchiveService/user_files:/user_files'
      - './src/Orchestrator/services/FileArchiveService/images:/images'
      - './src/Orchestrator/services/FileArchiveService/screenshots:/screenshots'
    networks:
      - truquest
    depends_on:
      - kafka
      - ipfs
      - otel-collector

  clickhouse:
    image: clickhouse/clickhouse-server:23.4
    environment:
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - '8123:8123'
      - '9000'
    networks:
      - truquest

  uptrace:
    image: 'uptrace/uptrace:1.5.6'
    volumes:
      - ./uptrace/uptrace-dev.yml:/etc/uptrace/uptrace.yml
      - ./uptrace/uptrace.crt:/etc/uptrace/tls/uptrace.crt
      - ./uptrace/uptrace.key:/etc/uptrace/tls/uptrace.key
    ports:
      - '14317'
      - '14318:14318'
    networks:
      - truquest

volumes:
  pg_data:
  kafka_data:
  clickhouse_data:

networks:
  truquest:
    driver: bridge
