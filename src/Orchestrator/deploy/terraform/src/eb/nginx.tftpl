events {
    worker_connections 1024;
}

http {
  map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
  }

  server {
    listen 443 ssl;
    server_name ${hostname} isolate.${hostname};

    ssl_certificate     /etc/nginx/ssl/truquest.crt;
    ssl_certificate_key /etc/nginx/ssl/truquest.key;

    location /api/hub {
      proxy_pass http://orchestrator:5223;

      # Configuration for WebSockets
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache        off;
      proxy_http_version 1.1; # WebSockets were implemented after http/1.0

      # Configuration for ServerSentEvents
      proxy_buffering off;

      # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
      proxy_read_timeout 100s;

      proxy_set_header Host              $host;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass         http://orchestrator:5223;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade    $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /ipfs {
        proxy_pass         http://ipfs:8080;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin'  '${hostname}';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age'       1728000;
            add_header 'Content-Type'                 'text/plain; charset=utf-8';
            add_header 'Content-Length'               0;
            return 204;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin'   '${hostname}' always;
            add_header 'Access-Control-Allow-Methods'  'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers'  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        root /static_files;
    }
  }
}
