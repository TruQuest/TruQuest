{
    "name": "pg-connector",
    "config": {
        "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
        "plugin.name": "pgoutput",
        "database.hostname": "pg",
        "database.port": "5432",
        "database.user": "postgres",
        "database.password": "password",
        "database.dbname": "TruQuest",
        "database.server.name": "debez",
        "heartbeat.interval.ms": "5000",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "key.converter.schemas.enable": "false",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter.schemas.enable": "false",
        "table.include.list": "truquest_events.ActionableThingRelatedEvents,truquest.ThingVerifiers,truquest.SettlementProposalVerifiers,truquest.SubjectUpdates,truquest.ThingUpdates,truquest.SettlementProposalUpdates",
        "predicates": "IsActionableThingRelatedEventsTable,IsVerifiersOrUpdatesTable",
        "transforms": "outbox,flatten,verifiersOrUpdates",
        "predicates.IsActionableThingRelatedEventsTable.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
        "predicates.IsActionableThingRelatedEventsTable.pattern": ".*ActionableThingRelatedEvents.*",
        "predicates.IsVerifiersOrUpdatesTable.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
        "predicates.IsVerifiersOrUpdatesTable.pattern": ".*(Subject|Thing|SettlementProposal)(Verifiers|Updates).*",
        "transforms.outbox.type": "io.debezium.transforms.outbox.EventRouter",
        "transforms.outbox.predicate": "IsActionableThingRelatedEventsTable",
        "transforms.outbox.table.field.event.id": "Id",
        "transforms.outbox.table.field.event.key": "ThingId",
        "transforms.outbox.table.field.event.payload": "Payload",
        "transforms.outbox.table.expand.json.payload": "true",
        "transforms.outbox.table.fields.additional.placement": "BlockNumber:header,TxnIndex:header,Type:header",
        "transforms.outbox.route.by.field": "ThingId",
        "transforms.outbox.route.topic.replacement": "thing.events",
        "transforms.flatten.type": "io.debezium.transforms.ExtractNewRecordState",
        "transforms.flatten.predicate": "IsVerifiersOrUpdatesTable",
        "transforms.flatten.add.headers": "table",
        "transforms.verifiersOrUpdates.type": "org.apache.kafka.connect.transforms.RegexRouter",
        "transforms.verifiersOrUpdates.regex": ".*(Subject|Thing|SettlementProposal)(Verifiers|Updates).*",
        "transforms.verifiersOrUpdates.replacement": "$2"
    }
}